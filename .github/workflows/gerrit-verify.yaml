---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2024 The Linux Foundation

name: Gerrit Composed Maven Verify

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
    inputs:
      GERRIT_BRANCH:
        description: "Branch that change is against"
        required: true
        type: string
      GERRIT_CHANGE_ID:
        description: "The ID for the change"
        required: true
        type: string
      GERRIT_CHANGE_NUMBER:
        description: "The Gerrit number"
        required: true
        type: string
      GERRIT_CHANGE_URL:
        description: "URL to the change"
        required: true
        type: string
      GERRIT_EVENT_TYPE:
        description: "Type of Gerrit event"
        required: true
        type: string
      GERRIT_PATCHSET_NUMBER:
        description: "The patch number for the change"
        required: true
        type: string
      GERRIT_PATCHSET_REVISION:
        description: "The revision sha"
        required: true
        type: string
      GERRIT_PROJECT:
        description: "Project in Gerrit"
        required: true
        type: string
      GERRIT_REFSPEC:
        description: "Gerrit refspec of change"
        required: true
        type: string

concurrency:
  # yamllint disable-line rule:line-length
  group: compose-make-verify-${{ github.workflow }}-${{ github.event.inputs.GERRIT_CHANGE_ID || github.run_id }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Clear votes
        # yamllint disable-line rule:line-length
        uses: lfit/gerrit-review-action@9627b9a144f2a2cad70707ddfae87c87dce60729  # v0.8
        with:
          host: ${{ vars.GERRIT_SERVER }}
          username: ${{ vars.GERRIT_SSH_USER }}
          key: ${{ secrets.GERRIT_SSH_PRIVKEY }}
          known_hosts: ${{ vars.GERRIT_KNOWN_HOSTS }}
          gerrit-change-number: ${{ inputs.GERRIT_CHANGE_NUMBER }}
          gerrit-patchset-number: ${{ inputs.GERRIT_PATCHSET_NUMBER }}
          vote-type: clear
          comment-only: true
      - name: Allow replication
        run: sleep 10s

  sanitize:
    runs-on: ubuntu-latest
    outputs:
      sanitized_project: ${{ steps.sanitize.outputs.result }}
    steps:
      - name: Sanitize GERRIT_PROJECT
        id: sanitize
        run: echo "result=${GERRIT_PROJECT//\//-}" >> $GITHUB_OUTPUT
        env:
          GERRIT_PROJECT: ${{ inputs.GERRIT_PROJECT }}

  maven-verify:
    needs: [prepare, sanitize]
    # yamllint disable-line rule:line-length
    uses: ravipendurty/releng-reusable-workflows/.github/workflows/compose-make-verify.yaml@12bc2adcabceba2b017b0095ced01ce7a5211a2b
    with:
      GERRIT_BRANCH: ${{ inputs.GERRIT_BRANCH }}
      GERRIT_CHANGE_ID: ${{ inputs.GERRIT_CHANGE_ID }}
      GERRIT_PROJECT: ${{ github.repository_owner }}/${{ needs.sanitize.outputs.sanitized_project }}
      GERRIT_REFSPEC: ${{ inputs.GERRIT_REFSPEC }}
      JDK_VERSION: "21"
      MVN_VERSION: "3.9.6"
      MAKE_TARGETS: "build"
      # yamllint enable rule:line-length
      ENV_VARS: ${{ toJSON(vars) }}
      SAVE_DOCKER_ARTIFACTS: true
      DOCKER_ARTIFACTS_TO_SAVE: "o-ran-sc/oam-oam-controller/sdnr-image:latest o-ran-sc/oam-oam-controller/sdnr-web-image:latest"
  
  deploy-test:
    needs: [maven-verify, sanitize]
    runs-on: ubuntu-latest
    steps:
      - name: Download docker artifacts
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Display structure of downloaded files
        run: ls -R

      - name: Load Docker image(s)
        run: docker load -i docker-images.tar
      
      - name: Checkout code
        uses: lfit/checkout-gerrit-change-action@54d751e8bd167bc91f7d665dabe33fae87aaaa63 # v0.9
        with:
          gerrit-refspec: ${{ inputs.GERRIT_REFSPEC }}
          gerrit-url: ${{ vars.GERRIT_URL }}
          repository: ${{ github.repository_owner }}/${{ needs.sanitize.outputs.sanitized_project }}
          delay: "0s"

      - name: Display structure of checkedout files
        run: ls -R

      - name: Run Tests
        run: |
          pip install -r requirements.txt
          bash CICD/bin/setup.sh

      - name: Print test log
        if: always()
        run: |
          echo "Test log dump - START"
          cat CICD/log/testsuite.log
          echo "Test log dump - END"
        
  vote:
    if: ${{ always() }}
    # yamllint enable rule:line-length
    needs: [prepare, maven-verify]
    runs-on: ubuntu-latest
    steps:
      - name: Get conclusion
        # yamllint disable-line rule:line-length
        uses: im-open/workflow-conclusion@e4f7c4980600fbe0818173e30931d3550801b992  # v2.2.3
      - name: Set vote
        # yamllint disable-line rule:line-length
        uses: lfit/gerrit-review-action@9627b9a144f2a2cad70707ddfae87c87dce60729  # v0.8
        with:
          host: ${{ vars.GERRIT_SERVER }}
          username: ${{ vars.GERRIT_SSH_USER }}
          key: ${{ secrets.GERRIT_SSH_PRIVKEY }}
          known_hosts: ${{ vars.GERRIT_KNOWN_HOSTS }}
          gerrit-change-number: ${{ inputs.GERRIT_CHANGE_NUMBER }}
          gerrit-patchset-number: ${{ inputs.GERRIT_PATCHSET_NUMBER }}
          vote-type: ${{ env.WORKFLOW_CONCLUSION }}
          comment-only: false
